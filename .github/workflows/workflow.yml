# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions

name: Build
on:
  push:
  pull_request:

jobs:

  test:
    name: Test
    strategy:
      # Keep running so we can see if other tests pass
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
        os:
          - ubuntu-20.04
        include:
          - python-version: '3.7'
            os: macos-latest
          - python-version: '3.7'
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get tox target
        id: toxtarget
        run: |
          py=$(echo ${{ matrix.python-version }} | tr -d .)
          echo "::set-output name=py::$py"
        shell: bash
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: python -mpip install --upgrade wheel pytest tox virtualenv
      - name: Run tests
        run: tox -e py${{ steps.toxtarget.outputs.py }}

  # https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
  publish-pypi:
    name: Pypi
    if: startsWith(github.ref, 'refs/tags')
    needs:
      # Only publish if other jobs passed
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Build package
        run: |
          python -mpip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.3.0
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
  update-repository:
    needs:
      - publish-pypi
    runs-on: ubuntu-latest
    steps:
      - name: Extract version and sha256
        run: |
          python -m pip download --no-deps --no-binary :all: omero-py
          output=$(python -m pip hash *.gz)
          hash256=$(echo $output | cut -d':' -f 3)
          package=$(echo $output | cut -d':' -f 1)
          version="${package#*omero-py-}"
          version="${version%.tar.gz}"
          echo "package_sha256="$hash256 >> $GITHUB_ENV
          echo "package_version="$version >> $GITHUB_ENV
          rm *.gz
      - name: Checkout conda-omero-py
        uses: actions/checkout@master
        with:
          repository: ome/conda-omero-py
      - name: Set the version and sha256
        run: |
          sed -i "s/\(.*sha256:.*\)/sha256: ${{env.package_sha256}}/g" meta.yaml
          sed -i "s/\(version = \).*/version = \"${{env.package_version}}\" %}/" meta.yaml
      - name: Create commits
        run: |
          git config user.name 'snoopycrimecop'
          git config user.email 'snoopycrimecop@users.noreply.github.com'
          git add -A
          git commit -m "Update version"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.API_TOKEN_GITHUB }
